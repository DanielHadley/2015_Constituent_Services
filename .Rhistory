library(dplyr)
library(ggplot2)
library(scales)
library(ggmap)
library(lubridate)
setwd("//fileshare1/Departments2/Somerstat Data/Traffic_and_Parking/2015_Residential_Permits_Deidentified/")
d <- read.csv("./Deidentified_Residential_Permits.csv")
byNameID <- d %>%
group_by(DISPLAY_NAME.anon.ID) %>%
summarise(total = n())%>%
arrange(-total)
byAddress <- d %>%
group_by(DISPLAY_ADDRESS) %>%
summarise(total = n()) %>%
arrange(-total)
byAddressNameRes <- d %>%
group_by(DISPLAY_ADDRESS, DISPLAY_NAME.anon.ID) %>%
summarise(total = n()) %>%
arrange(-total)
# Some register at two addresses
duplicates <- byAddressNameRes[duplicated(byAddressNameRes$DISPLAY_NAME),]
View(d)
# Get rid of all the ones that overlap
d$EXPIRYDATE2 <- as.Date(d$EXPIRYDATE, format="%m/%d/%Y")
d$PERMIT_STATUS2 <- ifelse(d$EXPIRYDATE2 < as.Date("08/01/2015"), "Expired", as.character(d$PERMIT_STATUS))
View(d)
View(d)
# Get rid of all the ones that overlap
d$EXPIRYDATE2 <- as.Date(d$EXPIRYDATE, format="%m/%d/%Y")
d$PERMIT_STATUS2 <- ifelse(d$EXPIRYDATE2 < as.Date("2015-08-01"), "Expired", as.character(d$PERMIT_STATUS))
View(d)
d <- d %>%
filter(PERMIT_STATUS2 != "Expired")
d <- d %>%
filter(PERMIT_STATUS2 != "Expired") %>%
select(-EXPIRYDATE2)
View(d)
View(d)
setwd("//fileshare1/Departments2/Somerstat Data/Traffic_and_Parking/2015_Residential_Permits_Deidentified/")
d <- read.csv("./Deidentified_Residential_Permits.csv")
# Get rid of all the ones that overlap
d$EXPIRYDATE2 <- as.Date(d$EXPIRYDATE, format="%m/%d/%Y")
d$PERMIT_STATUS2 <- ifelse(d$EXPIRYDATE2 < as.Date("2015-08-01"), "Expired", as.character(d$PERMIT_STATUS))
d <- d %>%
filter(PERMIT_STATUS2 != "Expired") %>%
select(-EXPIRYDATE2) %>%
select(-PERMIT_STATUS2)
View(d)
byNameID <- d %>%
group_by(DISPLAY_NAME.anon.ID) %>%
summarise(total = n())%>%
arrange(-total)
byAddress <- d %>%
group_by(DISPLAY_ADDRESS) %>%
summarise(total = n()) %>%
arrange(-total)
byAddressNameRes <- d %>%
group_by(DISPLAY_ADDRESS, DISPLAY_NAME.anon.ID) %>%
summarise(total = n()) %>%
arrange(-total)
####  Visualize ####
# I add some colors and my.theme to micromanage how the plots look
# These lines are not neccessary, but can really make plots look better
lime_green = "#2ecc71"
soft_blue = "#3498db"
pinkish_red = "#e74c3c"
purple = "#9b59b6"
teele = "#1abc9c"
nice_blue = "#2980b9"
my.theme <-
theme(#plot.background = element_rect(fill="white"), # Remove background
panel.grid.major = element_blank(), # Remove gridlines
# panel.grid.minor = element_blank(), # Remove more gridlines
# panel.border = element_blank(), # Remove border
# panel.background = element_blank(), # Remove more background
axis.ticks = element_blank(), # Remove axis ticks
axis.text=element_text(size=6), # Enlarge axis text font
axis.title=element_text(size=8), # Enlarge axis title font
plot.title=element_text(size=12) # Enlarge, left-align title
,axis.text.x = element_text(angle=60, hjust = 1) # Uncomment if X-axis unreadable
)
# Take out the stuff after the first comma
byAddress$DISPLAY_ADDRESS <- gsub("^(.*?),.*", "\\1", byAddress$DISPLAY_ADDRESS)
ggplot(byAddress[c(1:3, 5:7, 9:12),], aes(x=reorder(DISPLAY_ADDRESS, total), y=total)) +
geom_bar(stat="identity", fill=nice_blue) +
my.theme + ggtitle("Addresses with the Most Permits") +
xlab("Top Addresses") + ylab("Current Permits")
ggsave("./2015_ByAddress.png", dpi=250, width=4, height=4)
# Permits
byTotal <- byAddress %>% group_by(total) %>%
summarise(ftotal = n()) %>%
mutate("5 Or More" = sum(byTotal[5:14,]))
numbers <- c(1, 2, 3, 4, "5 Or More")
totals <- c(16833, 4381, 720, 184, 173)
byTotal <- data.frame(numbers, totals)
ggplot(byTotal, aes(x=numbers, y=totals)) +
geom_bar(stat="identity", fill=nice_blue) +
my.theme + ggtitle("Most Addresses Only Have 1 or 2 Permits") +
xlab("# of Active Permits Per Address") + ylab("Unique Addresses") +
scale_y_continuous(labels = comma)
ggsave("./2015_ByAddressNumbers.png", dpi=250, width=4, height=4)
View(byTotal)
View(byAddress)
View(byAddress)
byAddressForPlot <- byAddress %>%
filter(DISPLAY_ADDRESS != "SOMERVILLE")
View(byAddressForPlot)
ggplot(byAddressForPlot, aes(x=reorder(DISPLAY_ADDRESS, total), y=total)) +
geom_bar(stat="identity", fill=nice_blue) +
my.theme + ggtitle("Addresses with the Most Permits") +
xlab("Top Addresses") + ylab("Current Permits")
ggsave("./2015_ByAddress.png", dpi=250, width=4, height=4)
ggplot(byAddressForPlot[1:10,], aes(x=reorder(DISPLAY_ADDRESS, total), y=total)) +
geom_bar(stat="identity", fill=nice_blue) +
my.theme + ggtitle("Addresses with the Most Permits") +
xlab("Top Addresses") + ylab("Current Permits")
ggsave("./2015_ByAddress.png", dpi=250, width=4, height=4)
ggplot(byAddressForPlot[1:10,], aes(x=reorder(DISPLAY_ADDRESS, total), y=total)) +
geom_bar(stat="identity", fill=nice_blue) +
my.theme + ggtitle("Addresses with the Most Permits") +
xlab("Top Addresses") + ylab("Current Permits")
ggsave("./2015_ByAddress.png", dpi=250, width=4, height=4)
# Permits
byTotal <- byAddress %>% group_by(total) %>%
summarise(ftotal = n()) %>%
mutate("5 Or More" = sum(byTotal[5:14,]))
numbers <- c(1, 2, 3, 4, "5 Or More")
totals <- c(16833, 4381, 720, 184, 173)
byTotal <- data.frame(numbers, totals)
ggplot(byTotal, aes(x=numbers, y=totals)) +
geom_bar(stat="identity", fill=nice_blue) +
my.theme + ggtitle("Most Addresses Only Have 1 or 2 Permits") +
xlab("# of Active Permits Per Address") + ylab("Unique Addresses") +
scale_y_continuous(labels = comma)
ggsave("./2015_ByAddressNumbers.png", dpi=250, width=4, height=4)
View(byTotal)
byTotal <- byAddress %>% group_by(total) %>%
summarise(ftotal = n()) %>%
mutate("5 Or More" = sum(byTotal[5:14,]))
byTotal <- byAddress %>% group_by(total) %>%
summarise(ftotal = n())
View(byTotal)
sum(byTotal[5:14,])
sum(byTotal[5:12,])
# Permits
byTotal <- byAddress %>% group_by(total) %>%
summarise(ftotal = n()) %>%
mutate("5 Or More" = sum(byTotal[5:14,]))
numbers <- c(1, 2, 3, 4, "5 Or More")
totals <- c(byTotal[1,], byTotal[2,], byTotal[3,], byTotal[4,], sum(byTotal$ftotal) - sum(byTotal[1:4,]))
byTotalFinal <- data.frame(numbers, totals)
View(byTotalFinal)
byTotal <- byAddress %>% group_by(total) %>%
summarise(ftotal = n())
numbers <- c(1, 2, 3, 4, "5 Or More")
totals <- c(byTotal[1,], byTotal[2,], byTotal[3,], byTotal[4,], sum(byTotal$ftotal) - sum(byTotal[1:4,]))
byTotalFinal <- data.frame(numbers, totals)
View(byTotalFinal)
totals <- c(byTotal[1,], byTotal[2,], byTotal[3,], byTotal[4,], sum(byTotal$ftotal) - sum(byTotal[1:4,]))
totals
byTotal$ftotal[3]
byTotal <- byAddress %>% group_by(total) %>%
summarise(ftotal = n())
numbers <- c(1, 2, 3, 4, "5 Or More")
totals <- c(byTotal$ftotal[1], byTotal$ftotal[2], byTotal$ftotal[3], byTotal$ftotal[4], sum(byTotal$ftotal) - sum(byTotal[1:4,]))
byTotalFinal <- data.frame(numbers, totals)
View(byTotalFinal)
library(dplyr)
library(ggplot2)
library(scales)
library(ggmap)
library(lubridate)
setwd("//fileshare1/Departments2/Somerstat Data/Traffic_and_Parking/2015_Residential_Permits_Deidentified/")
d <- read.csv("./Deidentified_Residential_Permits.csv")
# Get rid of all the ones that overlap
d$EXPIRYDATE2 <- as.Date(d$EXPIRYDATE, format="%m/%d/%Y")
d$PERMIT_STATUS2 <- ifelse(d$EXPIRYDATE2 < as.Date("2015-08-01"), "Expired", as.character(d$PERMIT_STATUS))
d <- d %>%
filter(PERMIT_STATUS2 != "Expired") %>%
select(-EXPIRYDATE2) %>%
select(-PERMIT_STATUS2)
byNameID <- d %>%
group_by(DISPLAY_NAME.anon.ID) %>%
summarise(total = n())%>%
arrange(-total)
byAddress <- d %>%
group_by(DISPLAY_ADDRESS) %>%
summarise(total = n()) %>%
arrange(-total)
byAddressNameRes <- d %>%
group_by(DISPLAY_ADDRESS, DISPLAY_NAME.anon.ID) %>%
summarise(total = n()) %>%
arrange(-total)
# Some register at two addresses
duplicates <- byAddressNameRes[duplicated(byAddressNameRes$DISPLAY_NAME),]
####  Visualize ####
# I add some colors and my.theme to micromanage how the plots look
# These lines are not neccessary, but can really make plots look better
lime_green = "#2ecc71"
soft_blue = "#3498db"
pinkish_red = "#e74c3c"
purple = "#9b59b6"
teele = "#1abc9c"
nice_blue = "#2980b9"
my.theme <-
theme(#plot.background = element_rect(fill="white"), # Remove background
panel.grid.major = element_blank(), # Remove gridlines
# panel.grid.minor = element_blank(), # Remove more gridlines
# panel.border = element_blank(), # Remove border
# panel.background = element_blank(), # Remove more background
axis.ticks = element_blank(), # Remove axis ticks
axis.text=element_text(size=6), # Enlarge axis text font
axis.title=element_text(size=8), # Enlarge axis title font
plot.title=element_text(size=12) # Enlarge, left-align title
,axis.text.x = element_text(angle=60, hjust = 1) # Uncomment if X-axis unreadable
)
# Take out the stuff after the first comma
byAddress$DISPLAY_ADDRESS <- gsub("^(.*?),.*", "\\1", byAddress$DISPLAY_ADDRESS)
byAddressForPlot <- byAddress %>%
filter(DISPLAY_ADDRESS != "SOMERVILLE")
ggplot(byAddressForPlot[1:10,], aes(x=reorder(DISPLAY_ADDRESS, total), y=total)) +
geom_bar(stat="identity", fill=nice_blue) +
my.theme + ggtitle("Addresses with the Most Permits") +
xlab("Top Addresses") + ylab("Current Permits")
ggsave("./2015_ByAddress.png", dpi=250, width=4, height=4)
# Permits
byTotal <- byAddress %>% group_by(total) %>%
summarise(ftotal = n())
numbers <- c(1, 2, 3, 4, "5 Or More")
totals <- c(byTotal$ftotal[1], byTotal$ftotal[2], byTotal$ftotal[3], byTotal$ftotal[4], sum(byTotal$ftotal) - sum(byTotal[1:4,]))
byTotalFinal <- data.frame(numbers, totals)
ggplot(byTotalFinal, aes(x=numbers, y=totals)) +
geom_bar(stat="identity", fill=nice_blue) +
my.theme + ggtitle("Most Addresses Only Have 1 or 2 Permits") +
xlab("# of Active Permits Per Address") + ylab("Unique Addresses") +
scale_y_continuous(labels = comma)
ggsave("./2015_ByAddressNumbers.png", dpi=250, width=4, height=4)
library(dplyr)
library(ggplot2)
library(scales)
library(ggmap)
library(lubridate)
setwd("//fileshare1/Departments2/Somerstat Data/Traffic_and_Parking/2015_Residential_Permits_Deidentified/")
d <- read.csv("./Deidentified_Residential_Permits.csv")
# Get rid of all the ones that overlap
d$EXPIRYDATE2 <- as.Date(d$EXPIRYDATE, format="%m/%d/%Y")
d$PERMIT_STATUS2 <- ifelse(d$EXPIRYDATE2 < as.Date("2015-08-01"), "Expired", as.character(d$PERMIT_STATUS))
d <- d %>%
filter(PERMIT_STATUS2 != "Expired") %>%
select(-EXPIRYDATE2) %>%
select(-PERMIT_STATUS2)
byNameID <- d %>%
group_by(DISPLAY_NAME.anon.ID) %>%
summarise(total = n())%>%
arrange(-total)
byAddress <- d %>%
group_by(DISPLAY_ADDRESS) %>%
summarise(total = n()) %>%
arrange(-total)
byAddressNameRes <- d %>%
group_by(DISPLAY_ADDRESS, DISPLAY_NAME.anon.ID) %>%
summarise(total = n()) %>%
arrange(-total)
# Some register at two addresses
duplicates <- byAddressNameRes[duplicated(byAddressNameRes$DISPLAY_NAME),]
####  Visualize ####
# I add some colors and my.theme to micromanage how the plots look
# These lines are not neccessary, but can really make plots look better
lime_green = "#2ecc71"
soft_blue = "#3498db"
pinkish_red = "#e74c3c"
purple = "#9b59b6"
teele = "#1abc9c"
nice_blue = "#2980b9"
my.theme <-
theme(#plot.background = element_rect(fill="white"), # Remove background
panel.grid.major = element_blank(), # Remove gridlines
# panel.grid.minor = element_blank(), # Remove more gridlines
# panel.border = element_blank(), # Remove border
# panel.background = element_blank(), # Remove more background
axis.ticks = element_blank(), # Remove axis ticks
axis.text=element_text(size=6), # Enlarge axis text font
axis.title=element_text(size=8), # Enlarge axis title font
plot.title=element_text(size=12) # Enlarge, left-align title
,axis.text.x = element_text(angle=60, hjust = 1) # Uncomment if X-axis unreadable
)
# Take out the stuff after the first comma
byAddress$DISPLAY_ADDRESS <- gsub("^(.*?),.*", "\\1", byAddress$DISPLAY_ADDRESS)
byAddressForPlot <- byAddress %>%
filter(DISPLAY_ADDRESS != "SOMERVILLE")
ggplot(byAddressForPlot[1:10,], aes(x=reorder(DISPLAY_ADDRESS, total), y=total)) +
geom_bar(stat="identity", fill=nice_blue) +
my.theme + ggtitle("Addresses with the Most Permits") +
xlab("Top Addresses") + ylab("Current Permits")
ggsave("./2015_ByAddress.png", dpi=250, width=4, height=4)
# Permits
byTotal <- byAddress %>% group_by(total) %>%
summarise(ftotal = n())
numbers <- c(1, 2, 3, "4 Or More")
totals <- c(byTotal$ftotal[1], byTotal$ftotal[2], byTotal$ftotal[3], sum(byTotal$ftotal) - sum(byTotal[1:3,]))
byTotalFinal <- data.frame(numbers, totals)
ggplot(byTotalFinal, aes(x=numbers, y=totals)) +
geom_bar(stat="identity", fill=nice_blue) +
my.theme + ggtitle("Most Addresses Only Have 1 or 2 Permits") +
xlab("# of Active Permits Per Address") + ylab("Unique Addresses") +
scale_y_continuous(labels = comma)
ggsave("./2015_ByAddressNumbers.png", dpi=250, width=4, height=4)
#### Created 6/15 by Daniel Hadley to load and analyze Citizenserve Permit Data ####
# The FTP site was created by Julie at Citizenserve
# working Directory and packages #
setwd("c:/Users/dhadley/Documents/GitHub/2015_Citizenserve_Data/")
library(RCurl)
library(dplyr)
library(ggplot2)
library(scales) # for changing from scientific notation
library(tidyr)
library(httr)
# dates
# We use these for the charts and for downloading the most recent data
today <- Sys.Date()
yesterday <- today - 1
fileDate <- format(yesterday, format="%m%d%Y")
# Read it
d <- read.delim("c:/Users/dhadley/Documents/GitHub/2015_Citizenserve_Data/data/Daily_Permits.txt")
# Remove everything else
remove(url, x)
r <- PUT("https://data.somervillema.gov/resource/ym4c-vshh.json",
body = upload_file("./data/Daily_Permits.csv"),
authenticate("scraig@somervillema.gov", "Constituent2"),
add_headers("X-App-Token" = "FSax3MAURoTngN3uz9mGBZVR8",
"Content-Type" = "text/csv"))
r
View(d)
d$IssueDate <- as.Date(d$IssueDate)
#### Created 6/15 by Daniel Hadley to load and analyze Citizenserve Permit Data ####
# The FTP site was created by Julie at Citizenserve
# working Directory and packages #
setwd("c:/Users/dhadley/Documents/GitHub/2015_Citizenserve_Data/")
PUT("https://data.somervillema.gov/resource/ym4c-vshh.json",
body = upload_file("./data/Daily_Permits.csv"),
authenticate("scraig@somervillema.gov", "Constituent2"),
add_headers("X-App-Token" = "FSax3MAURoTngN3uz9mGBZVR8",
"Content-Type" = "text/csv"))
#### Created 10/14 by Daniel Hadley to load and analyze 311 Data ####
# The FTP site was created by Ahmod at Intelligov
# working Directory and packages #
setwd("c:/Users/dhadley/Documents/GitHub/2015_Constituent_Services")
library(RCurl)
library(dplyr)
library(ggplot2)
library(scales) # for changing from scientific notation
library(tidyr)
library(jsonlite)
# QSend API
api <- "https://somervillema.qscend.com/qalert/api/v1/requests/get/?key=5c2b987d13cc414cb26f956cf31fbffc8ca62dc37d1a4f6bba3cc74398162db5"
d <- fromJSON(api)
View(d)
api <- "https://somervillema.qscend.com/qalert/api/v1/requests/get/?createDateMin=07\/01\/2015\12:01\PM&key=5c2b987d13cc414cb26f956cf31fbffc8ca62dc37d1a4f6bba3cc74398162db5"
api <- "https://somervillema.qscend.com/qalert/api/v1/requests/get/?createDateMin=07/01/2015/12:01/PM&key=5c2b987d13cc414cb26f956cf31fbffc8ca62dc37d1a4f6bba3cc74398162db5"
d <- fromJSON(api)
View(d)
api <- "https://somervillema.qscend.com/qalert/api/v1/requests/get/?createDateMin=1441080000000&key=5c2b987d13cc414cb26f956cf31fbffc8ca62dc37d1a4f6bba3cc74398162db5"
d <- fromJSON(api)
api <- "https://somervillema.qscend.com/qalert/api/v1/requests/get/?createDateMax=1441080000000&key=5c2b987d13cc414cb26f956cf31fbffc8ca62dc37d1a4f6bba3cc74398162db5"
d <- fromJSON(api)
