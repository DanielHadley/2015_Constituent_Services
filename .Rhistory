setwd("c:/Users/dhadley/Documents/GitHub/2015_Constituent_Services")
setwd("c:/Users/dhadley/Documents/GitHub/2015_Constituent_Services")
library(RCurl)
library(plyr)
library(ggplot2)
library(scales) # for changing from scientific notation
# Example scale feature: scale_y_continuous(labels = comma) or scale_y_continuous(labels = dollar)
library(reshape2)
#### Download Monthly DATA ####
# First retreive the monthly data from the ftp server maintained by Intelligov
# This has all the work orders/quick tickets, and data on how quickly they are completed
url<-c("sftp://somervillemadata@ftp2.ciacorp.com/311MonthlyAllHistoryDataDump.csv")
x <-getBinaryURL(url, userpwd="somervillemadata:today123")
# Write it
# http://stackoverflow.com/questions/18833031/download-rdata-and-csv-files-from-ftp-using-rcurl-or-any-other-method
writeBin(x, "./data/Monthly.csv")
# Read it
# I had problems with the encoding, so I added the f <- file
# http://stackoverflow.com/questions/4806823/how-to-detect-the-right-encoding-for-read-csv
f <- file('./data/Monthly.csv', open="r", encoding="UTF-16LE")
# Turn it into a dataframe
# At first I got an error, so I added the fill=TRUE
# http://stackoverflow.com/questions/18161009/error-in-reading-in-data-set-in-r
d <- read.table(f, sep=',', dec='.', header=TRUE, fill = TRUE)
#### Add variables/ Clean Data ####
d$Tab <- 1
View(d)
tail(d)
Sys.Date()
####  Visualize ####
lime_green = "#2ecc71"
soft_blue = "#3498db"
pinkish_red = "#e74c3c"
purple = "#9b59b6"
teele = "#1abc9c"
nice_blue = "#2980b9"
my.theme <-
theme(#plot.background = element_rect(fill="white"), # Remove background
panel.grid.major = element_blank(), # Remove gridlines
# panel.grid.minor = element_blank(), # Remove more gridlines
# panel.border = element_blank(), # Remove border
# panel.background = element_blank(), # Remove more background
axis.ticks = element_blank(), # Remove axis ticks
axis.text=element_text(size=6), # Enlarge axis text font
axis.title=element_text(size=8), # Enlarge axis title font
plot.title=element_text(size=12) # Enlarge, left-align title
#,axis.text.x = element_text(angle=60, hjust = 1) # Uncomment if X-axis unreadable
)
d.top <- subset(d, Service.Type %in% arrange(count(d, .(Service.Type)), desc(freq))[1:10,]$Service.Type)
toptype <- ddply(d.top, "Service.Type", summarise, count = sum(Tab, na.rm=TRUE))
ggplot(toptype, aes(x=reorder(toptype$Service.Type, -toptype$count), y=toptype$count)) + geom_bar(stat = "identity", colour="white", fill=nice_blue) +
my.theme + ggtitle("Calls Since 2007") + xlab("Top Call Types")+ylab("Number of Calls") +
theme(axis.text.x = element_text(angle=60, hjust = 1))
my.theme <-
theme(#plot.background = element_rect(fill="white"), # Remove background
panel.grid.major = element_blank(), # Remove gridlines
# panel.grid.minor = element_blank(), # Remove more gridlines
# panel.border = element_blank(), # Remove border
# panel.background = element_blank(), # Remove more background
axis.ticks = element_blank(), # Remove axis ticks
axis.text=element_text(size=6), # Enlarge axis text font
axis.title=element_text(size=8), # Enlarge axis title font
plot.title=element_text(size=12) # Enlarge, left-align title
#,axis.text.x = element_text(angle=60, hjust = 1) # Uncomment if X-axis unreadable
)
d.top <- subset(d, Service.Type %in% arrange(count(d, .(Service.Type)), desc(freq))[1:10,]$Service.Type)
toptype <- ddply(d.top, "Service.Type", summarise, count = sum(Tab, na.rm=TRUE))
ggplot(toptype, aes(x=reorder(toptype$Service.Type, -toptype$count), y=toptype$count)) + geom_bar(stat = "identity", colour="white", fill=nice_blue) +
my.theme + ggtitle("Calls Since 2007") + xlab("Top Call Types")+ylab("Number of Calls") +
theme(axis.text.x = element_text(angle=60, hjust = 1))
ggsave("./plots/Monthlycalls01.png", dpi=300, width=3, height=3)
tail(d)
not <- d[which(d$On.Time == "N"),]
tail(not)
library("dplyr")
d$Date <- as.Date(d$Date)
d$Date <- as.Date(d$Date, "%m/%d/%Y")
summary(d$Date)
d$Year.Month <- format(d$Date, '%Y-%m')
d$Month <- format(d$Date, '%m')
View(d)
overdue <- d %>%
group_by(Year.Month) %>%
summarise(num.types = n(), counts = sum(Count))
overdue <- d %>%
group_by(Year.Month) %>%
summarise(num.types = n(), counts = sum(Tab))
View(overdue)
#### Monthly overdue ####
overdue <- d %>%
group_by(Year.Month) %>%
summarise(num.types = n())
View(overdue)
overdue <- d %>%
group_by(Year.Month, d$On.Time) %>%
summarise(num.types = n(), counts = sum(Tab))
overdue <- d %>%
group_by(Year.Month, On.Time) %>%
summarise(num.types = n(), counts = sum(Tab))
View(overdue)
overdue <- d %>%
group_by(Year.Month, On.Time) %>%
summarise(num.types = n(On.Time), counts = sum(Tab))
View(overdue)
overdue <- d %>%
group_by(On.Time, Year.Month) %>%
summarise(num.types = n(), counts = sum(Tab))
View(overdue)
overdue <- d %>%
group_by(Year.Month, On.Time) %>%
summarise(total = sum(n)) %>%
qplot(Year.Month, total, color = On.Time, data = ., geom = "line")
overdue <- d %>%
group_by(Year.Month, On.Time) %>%
summarise(total = sum(n))
overdue <- d %>%
group_by(Year.Month, On.Time) %>%
summarize(total = sum(n))
overdue <- d %>%
group_by(Year.Month, On.Time) %>%
summarise(num.types = n(), counts = sum(Tab))
View(overdue)
overdue <- d %>%
group_by(Year.Month, On.Time) %>%
summarise(total = n())
View(overdue)
overdue <- d %>%
group_by(Year.Month) %>%
summarise(total = n())
View(overdue)
overdue <- d %>%
group_by(Year.Month, On.Time) %>%
summarise(total = n())
View(overdue)
overdue <- d %>%
group_by(On.Time) %>%
summarise(total = n())
View(overdue)
install.packages("tidyr")
library(tidyr)
View(overdue)
overdue <- d %>%
melt(id=c("Year.Month"), measure=c("Tab"))
View(overdue)
overdue <- d %>%
melt(id=c("Year.Month", "On.Time"), measure=c("Tab"))
View(overdue)
overdue <- d %>%
melt(id=c("Year.Month", "On.Time"), measure=c("Tab")) %>% # id = non-numeric; measure = numeric
dcast(Year.Month ~ variable, sum)
View(overdue)
overdue <- d %>%
melt(id=c("Year.Month", "On.Time"), measure=c("Tab")) %>% # id = non-numeric; measure = numeric
dcast(Year.Month ~ On.Time, sum)
View(overdue)
summary(d$On.Time)
overdue <- d %>%
melt(id=c(Year.Month, On.Time), measure=c("Tab")) %>% # id = non-numeric; measure = numeric
dcast(Year.Month ~ On.Time, sum)
overdue <- d %>%
melt(id=(Year.Month, On.Time), measure=c("Tab")) %>% # id = non-numeric; measure = numeric
dcast(Year.Month ~ On.Time, sum)
overdue <- d %>%
melt(id=c("Year.Month", "On.Time"), measure=c("Tab")) %>% # id = non-numeric; measure = numeric
dcast(Year.Month ~ On.Time, sum)
overdue <- d %>%
melt(id=c("Year.Month", "On.Time"), measure=c("Tab")) %>% # id = non-numeric; measure = numeric
dcast(Year.Month ~ On.Time, sum) %>%
mutate(Per.On.Time = Y/ Y+N)
View(overdue)
overdue <- d %>%
melt(id=c("Year.Month", "On.Time"), measure=c("Tab")) %>% # id = non-numeric; measure = numeric
dcast(Year.Month ~ On.Time, sum) %>%
mutate(Per.On.Time = Y / Y+N)
View(overdue)
overdue <- d %>%
melt(id=c("Year.Month", "On.Time"), measure=c("Tab")) %>% # id = non-numeric; measure = numeric
dcast(Year.Month ~ On.Time, sum) %>%
mutate(Per.On.Time = Y+N)
View(overdue)
overdue <- d %>%
melt(id=c("Year.Month", "On.Time"), measure=c("Tab")) %>% # id = non-numeric; measure = numeric
dcast(Year.Month ~ On.Time, sum) %>%
mutate(Per.On.Time = Y / (Y+N))
View(overdue)
ggplot(overdue, aes(x=overdue$Year.Month, y=overdue$Per.On.Time)) +
geom_line(colour=lime_green, size = 2) +
my.theme + ggtitle("Grammy Award Categories Over Time") + xlab("Year") +
ylab("Grammy Awards Per Year") +
scale_y_continuous(labels = comma)
ggplot(overdue, aes(x=overdue$Year.Month, y=overdue$Per.On.Time)) +
geom_line(colour=lime_green, size = 2)
ggplot(overdue, aes(x=overdue$Year.Month, y=overdue$Per.On.Time))
ggplot(overdue, aes(x=overdue$Year.Month, y=overdue$Per.On.Time)) +
geom_line(aes(colour=lime_green, size = 2, group=Per.On.Time))
ggplot(overdue, aes(x=overdue$Year.Month, y=overdue$Per.On.Time)) +
geom_line
ggplot(overdue, aes(x=overdue$Year.Month, y=overdue$Per.On.Time)) +
geom_line()
summary(overdue$Per.On.Time)
ggplot(overdue, aes(x=overdue$Year.Month, y=overdue$Per.On.Time, group=1)) +
geom_line(aes(colour=lime_green, size = 2, group=Per.On)) +
my.theme + ggtitle("Grammy Award Categories Over Time") + xlab("Year") +
ylab("Grammy Awards Per Year") +
scale_y_continuous(labels = comma)
ggplot(overdue, aes(x=overdue$Year.Month, y=overdue$Per.On.Time, group=1)) +
geom_line(colour=lime_green, size = 2) +
my.theme + ggtitle("Grammy Award Categories Over Time") + xlab("Year") +
ylab("Grammy Awards Per Year") +
scale_y_continuous(labels = comma)
ggplot(overdue, aes(x=overdue$Year.Month, y=overdue$Per.On.Time, group=1)) +
geom_line(colour=lime_green, size = 2) +
my.theme + ggtitle("Grammy Award Categories Over Time") + xlab("Year") +
ylab("Grammy Awards Per Year") +
scale_y_continuous(labels = comma)
ggplot(overdue, aes(x=overdue$Year.Month, y=overdue$Per.On.Time, group=1)) +
geom_line(colour=lime_green, size = 2) +
my.theme + ggtitle("Percent Completed on Time") + xlab("Year") +
ylab("% On Time") +
scale_y_continuous(labels = comma)
ggsave("./plots/PerOnTme.png", dpi=300, width=5, height=5)
my.theme <-
theme(#plot.background = element_rect(fill="white"), # Remove background
panel.grid.major = element_blank(), # Remove gridlines
# panel.grid.minor = element_blank(), # Remove more gridlines
# panel.border = element_blank(), # Remove border
# panel.background = element_blank(), # Remove more background
axis.ticks = element_blank(), # Remove axis ticks
axis.text=element_text(size=6), # Enlarge axis text font
axis.title=element_text(size=8), # Enlarge axis title font
plot.title=element_text(size=12) # Enlarge, left-align title
,axis.text.x = element_text(angle=60, hjust = 1) # Uncomment if X-axis unreadable
)
ggplot(overdue, aes(x=overdue$Year.Month, y=overdue$Per.On.Time, group=1)) +
geom_line(colour=lime_green, size = 2) +
my.theme + ggtitle("Percent Completed on Time") + xlab("Year") +
ylab("% On Time") +
scale_y_continuous(labels = comma)
ggsave("./plots/PerOnTme.png", dpi=300, width=5, height=5)
my.theme <-
theme(#plot.background = element_rect(fill="white"), # Remove background
panel.grid.major = element_blank(), # Remove gridlines
# panel.grid.minor = element_blank(), # Remove more gridlines
# panel.border = element_blank(), # Remove border
panel.background = element_blank(), # Remove more background
axis.ticks = element_blank(), # Remove axis ticks
axis.text=element_text(size=6), # Enlarge axis text font
axis.title=element_text(size=8), # Enlarge axis title font
plot.title=element_text(size=12) # Enlarge, left-align title
,axis.text.x = element_text(angle=60, hjust = 1) # Uncomment if X-axis unreadable
)
ggplot(overdue, aes(x=overdue$Year.Month, y=overdue$Per.On.Time, group=1)) +
geom_line(colour=lime_green, size = 2) +
my.theme + ggtitle("Percent Completed on Time") + xlab("Year") +
ylab("% On Time") +
scale_y_continuous(labels = comma)
ggsave("./plots/PerOnTme.png", dpi=300, width=5, height=5)
ggplot(overdue, aes(x=overdue$Year.Month, y=overdue$Per.On.Time, group=1)) +
geom_line(colour=lime_green, size = 1.5) +
my.theme + ggtitle("Percent Completed on Time") + xlab("Year") +
ylab("% On Time") +
scale_y_continuous(labels = comma)
ggsave("./plots/PerOnTme.png", dpi=300, width=7, height=5)
overdue <- d %>%
melt(id=c("Year.Month", "On.Time"), measure=c("Tab")) %>% # id = non-numeric; measure = numeric
dcast(Year.Month ~ On.Time, sum) %>%
mutate(Per.On.Time = Y / (Y+N)) %>%
[2:85,]
overdue <- d %>%
melt(id=c("Year.Month", "On.Time"), measure=c("Tab")) %>% # id = non-numeric; measure = numeric
dcast(Year.Month ~ On.Time, sum) %>%
mutate(Per.On.Time = Y / (Y+N)) %>%
filter(Y > 2)
View(overdue)
ggplot(overdue, aes(x=overdue$Year.Month, y=overdue$Per.On.Time, group=1)) +
geom_line(colour=lime_green, size = 1.5) +
my.theme + ggtitle("Percent Completed on Time") + xlab("Year-Month") +
ylab("% On Time") +
scale_y_continuous(labels = comma)
ggsave("./plots/PerOnTme.png", dpi=300, width=7, height=5)
View(overdue)
ggplot(overdue, aes(x=overdue$Year.Month, y=overdue$Per.On.Time, group=1)) +
geom_line(colour=lime_green, size = 1.5) +
my.theme + ggtitle("Percent Completed on Time") + xlab("Year-Month") +
ylab("% On Time") +
scale_y_continuous(labels = comma)
ggsave("./plots/PerOnTme.png", dpi=300, width=7, height=5)
ggplot(overdue, aes(x=overdue$Year.Month, y=overdue$Per.On.Time, group=1)) +
geom_line(colour=lime_green, size = 1.5) +
my.theme + ggtitle("Percent Completed on Time") + xlab("Year-Month") +
ylab("% On Time") +
scale_y_continuous(labels = percent)
ggsave("./plots/PerOnTme.png", dpi=300, width=7, height=5)
my.theme <-
theme(#plot.background = element_rect(fill="white"), # Remove background
panel.grid.major = element_blank(), # Remove gridlines
# panel.grid.minor = element_blank(), # Remove more gridlines
# panel.border = element_blank(), # Remove border
panel.background = element_blank(), # Remove more background
axis.ticks = element_blank(), # Remove axis ticks
axis.text=element_text(size=10), # Enlarge axis text font
axis.title=element_text(size=12), # Enlarge axis title font
plot.title=element_text(size=22) # Enlarge, left-align title
,axis.text.x = element_text(angle=60, hjust = 1) # Uncomment if X-axis unreadable
)
#### Monthly overdue ####
overdue <- d %>%
melt(id=c("Year.Month", "On.Time"), measure=c("Tab")) %>% # id = non-numeric; measure = numeric
dcast(Year.Month ~ On.Time, sum) %>%
mutate(Per.On.Time = Y / (Y+N)) %>%
filter(Y > 2)
ggplot(overdue, aes(x=overdue$Year.Month, y=overdue$Per.On.Time, group=1)) +
geom_line(colour=lime_green, size = 1.5) +
my.theme + ggtitle("Percent Completed on Time") + xlab("Year-Month") +
ylab("% On Time") +
scale_y_continuous(labels = percent)
ggsave("./plots/PerOnTme.png", dpi=300, width=7, height=5)
ggplot(overdue, aes(x=overdue$Year.Month, y=overdue$Per.On.Time, group=1)) +
geom_line(colour=lime_green, size = 1.5) +
my.theme + ggtitle("Percent Completed on Time") + xlab("Year-Month") +
ylab("% On Time") +
scale_y_continuous(labels = percent) +
expand_limits(y = 0)
ggplot(overdue, aes(x=overdue$Year.Month, y=overdue$Per.On.Time, group=1)) +
geom_line(colour=lime_green, size = 1.5) +
my.theme + ggtitle("Percent Completed on Time") + xlab("Year-Month") +
ylab("% On Time") +
scale_y_continuous(labels = percent) +
expand_limits(y = 0)
ggsave("./plots/PerOnTme.png", dpi=300, width=7, height=5)
d$Year <- format(d$Date, '%Y')
AnnualOverdue <- d %>%
melt(id=c("Year", "On.Time"), measure=c("Tab")) %>% # id = non-numeric; measure = numeric
dcast(Year.Month ~ On.Time, sum) %>%
mutate(Per.On.Time = Y / (Y+N)) %>%
AnnualOverdue <- d %>%
melt(id=c("Year", "On.Time"), measure=c("Tab")) %>% # id = non-numeric; measure = numeric
dcast(Year.Month ~ On.Time, sum) %>%
mutate(Per.On.Time = Y / (Y+N))
AnnualOverdue <- d %>%
melt(id=c("Year", "On.Time"), measure=c("Tab")) %>% # id = non-numeric; measure = numeric
dcast(Year ~ On.Time, sum) %>%
mutate(Per.On.Time = Y / (Y+N))
View(AnnualOverdue)
AnnualOverdue <- d %>%
melt(id=c("Year", "On.Time"), measure=c("Tab")) %>% # id = non-numeric; measure = numeric
dcast(Year ~ On.Time, sum) %>%
mutate(Per.On.Time = Y / (Y+N))
View(AnnualOverdue)
AnnualOverdue <- d %>%
melt(id=c("Year", "On.Time"), measure=c("Tab")) %>% # id = non-numeric; measure = numeric
dcast(Year ~ On.Time, sum) %>%
mutate(Per.On.Time = Y / (Y+N))%>%
filter(Year > 2007)
View(AnnualOverdue)
ggplot(AnnualOverdue, aes(x=Year, y=Per.On.Time)) +
geom_bar(colour="white", fill=lime_green)
ggplot(AnnualOverdue, aes(x=Year, y=Per.On.Time)) +
geom_bar(colour="white", fill=lime_green) +
my.theme + ggtitle("Percent Completed on Time") + xlab("Year-Month") +
ylab("% On Time") +
scale_y_continuous(labels = percent) +
expand_limits(y = 0)
ggsave("./plots/PerOnTme3.png", dpi=300, width=5, height=5)
Annual <- d %>%
melt(id=c("Year", "On.Time"), measure=c("Tab")) %>% # id = non-numeric; measure = numeric
dcast(Year ~ On.Time, sum) %>%
mutate(Per.On.Time = (Y+N))%>%
filter(Year > 2007)
View(Annual)
Annual <- d %>%
melt(id=c("Year", "On.Time"), measure=c("Tab")) %>% # id = non-numeric; measure = numeric
dcast(Year ~ On.Time, sum) %>%
mutate(Total = (Y+N+Var.2))%>%
filter(Year > 2007)
ggplot(Annual, aes(x=Year, y=Total)) +
geom_bar(colour="white", fill=lime_green) +
my.theme + ggtitle("Total Work Orders") + xlab("Year") +
ylab("% On Time") +
scale_y_continuous(labels = percent) +
expand_limits(y = 0)
ggsave("./plots/PerOnTme4.png", dpi=300, width=5, height=5)
Annual <- d %>%
melt(id=c("Year", "On.Time"), measure=c("Tab")) %>% # id = non-numeric; measure = numeric
dcast(Year ~ On.Time, sum) %>%
mutate(Total = (Y+N+Var.2))%>%
filter(Year > 2007)
ggplot(Annual, aes(x=Year, y=Total)) +
geom_bar(colour="white", fill=lime_green) +
my.theme + ggtitle("Total Work Orders") + xlab("Year") +
ylab("Work Orders") +
scale_y_continuous(labels = comma) +
expand_limits(y = 0)
ggsave("./plots/PerOnTme4.png", dpi=300, width=5, height=5)
ggplot(Annual, aes(x=Year, y=Total)) +
geom_bar(colour="white", fill=nice_blue) +
my.theme + ggtitle("Total Work Orders") + xlab("Year") +
ylab("Work Orders") +
scale_y_continuous(labels = comma) +
expand_limits(y = 0)
ggsave("./plots/PerOnTme4.png", dpi=300, width=5, height=5)
View(d)
TypesOverdue <- d %>%
filter(On.Time = "N")
melt(id=c("Year", "Service.Type"), measure=c("Tab"))
TypesOverdue <- d %>%
filter(On.Time = "N") %>%
melt(id=c("Year", "Service.Type"), measure=c("Tab"))
View(d)
TypesOverdue <- d %>%
filter(On.Time   = "N") %>%
melt(id=c("Year", "Service.Type"), measure=c("Tab"))
TypesOverdue <- d %>%
filter(On.Time  == "N") %>%
melt(id=c("Year", "Service.Type"), measure=c("Tab"))
View(TypesOverdue)
TypesOverdue <- d %>%
filter(On.Time  == "N") %>%
group_by(Service.Type)
View(TypesOverdue)
TypesOverdue <- d %>%
filter(On.Time  == "N") %>%
group_by(Service.Type) %>%
summarise(total = sum(Tab))
View(TypesOverdue)
View(TypesOverdue)
TypesOverdue <- d %>%
filter(On.Time  == "N") %>%
group_by(Service.Type) %>%
summarise(total = sum(Tab)) %>%
arrange(total)
View(TypesOverdue)
TypesOverdue <- d %>%
filter(On.Time  == "N") %>%
group_by(Service.Type) %>%
summarise(total = sum(Tab)) %>%
arrange(desc(total))
View(TypesOverdue)
View(TypesOverdue)
View(TypesOverdue)
ggplot(TypesOverdue, aes(x=Service.Type, y=total)) +
geom_bar(colour="white", fill=nice_blue)
TypesOverdue <- d %>%
filter(On.Time  == "N") %>%
group_by(Service.Type) %>%
summarise(total = sum(Tab)) %>%
arrange(desc(total)) %>%
filter(total > 355)
ggplot(TypesOverdue, aes(x=Service.Type, y=total)) +
geom_bar(colour="white", fill=nice_blue) +
my.theme + ggtitle("Total Work Orders") + xlab("Year") +
ylab("Work Orders") +
scale_y_continuous(labels = comma) +
coord_flip()
ggplot(TypesOverdue, aes(x=reorder(Service.Type, total), y=total)) +
geom_bar(colour="white", fill=nice_blue) +
my.theme + ggtitle("Total Work Orders") + xlab("Year") +
ylab("Work Orders") +
scale_y_continuous(labels = comma) +
coord_flip()
ggplot(TypesOverdue, aes(x=reorder(Service.Type, total), y=total)) +
geom_bar(colour="white", fill=nice_blue) +
my.theme + ggtitle("Top Past Due") + xlab("Work Orders") +
ylab("Completed Past Due Since 2008") +
scale_y_continuous(labels = comma) +
coord_flip()
ggsave("./plots/PerOnTme5.png", dpi=300, width=5, height=5)
ggsave("./plots/PerOnTme5.png", dpi=300, width=7, height=5)
