byAddress$DISPLAY_ADDRESS <- gsub("^(.*?),.*", "\\1", byAddress$DISPLAY_ADDRESS)
byAddressForPlot <- byAddress %>%
filter(DISPLAY_ADDRESS != "SOMERVILLE")
ggplot(byAddressForPlot[1:10,], aes(x=reorder(DISPLAY_ADDRESS, total), y=total)) +
geom_bar(stat="identity", fill=nice_blue) +
my.theme + ggtitle("Addresses with the Most Permits") +
xlab("Top Addresses") + ylab("Current Permits")
ggsave("./2015_ByAddress.png", dpi=250, width=4, height=4)
# Permits
byTotal <- byAddress %>% group_by(total) %>%
summarise(ftotal = n())
numbers <- c(1, 2, 3, "4 Or More")
totals <- c(byTotal$ftotal[1], byTotal$ftotal[2], byTotal$ftotal[3], sum(byTotal$ftotal) - sum(byTotal[1:3,]))
byTotalFinal <- data.frame(numbers, totals)
ggplot(byTotalFinal, aes(x=numbers, y=totals)) +
geom_bar(stat="identity", fill=nice_blue) +
my.theme + ggtitle("Most Addresses Only Have 1 or 2 Permits") +
xlab("# of Active Permits Per Address") + ylab("Unique Addresses") +
scale_y_continuous(labels = comma)
ggsave("./2015_ByAddressNumbers.png", dpi=250, width=4, height=4)
#### Created 6/15 by Daniel Hadley to load and analyze Citizenserve Permit Data ####
# The FTP site was created by Julie at Citizenserve
# working Directory and packages #
setwd("c:/Users/dhadley/Documents/GitHub/2015_Citizenserve_Data/")
library(RCurl)
library(dplyr)
library(ggplot2)
library(scales) # for changing from scientific notation
library(tidyr)
library(httr)
# dates
# We use these for the charts and for downloading the most recent data
today <- Sys.Date()
yesterday <- today - 1
fileDate <- format(yesterday, format="%m%d%Y")
# Read it
d <- read.delim("c:/Users/dhadley/Documents/GitHub/2015_Citizenserve_Data/data/Daily_Permits.txt")
# Remove everything else
remove(url, x)
r <- PUT("https://data.somervillema.gov/resource/ym4c-vshh.json",
body = upload_file("./data/Daily_Permits.csv"),
authenticate("scraig@somervillema.gov", "Constituent2"),
add_headers("X-App-Token" = "FSax3MAURoTngN3uz9mGBZVR8",
"Content-Type" = "text/csv"))
r
View(d)
d$IssueDate <- as.Date(d$IssueDate)
#### Created 6/15 by Daniel Hadley to load and analyze Citizenserve Permit Data ####
# The FTP site was created by Julie at Citizenserve
# working Directory and packages #
setwd("c:/Users/dhadley/Documents/GitHub/2015_Citizenserve_Data/")
PUT("https://data.somervillema.gov/resource/ym4c-vshh.json",
body = upload_file("./data/Daily_Permits.csv"),
authenticate("scraig@somervillema.gov", "Constituent2"),
add_headers("X-App-Token" = "FSax3MAURoTngN3uz9mGBZVR8",
"Content-Type" = "text/csv"))
#### Created 10/14 by Daniel Hadley to load and analyze 311 Data ####
# The FTP site was created by Ahmod at Intelligov
# working Directory and packages #
setwd("c:/Users/dhadley/Documents/GitHub/2015_Constituent_Services")
library(RCurl)
library(dplyr)
library(ggplot2)
library(scales) # for changing from scientific notation
library(tidyr)
library(jsonlite)
# QSend API
api <- "https://somervillema.qscend.com/qalert/api/v1/requests/get/?key=5c2b987d13cc414cb26f956cf31fbffc8ca62dc37d1a4f6bba3cc74398162db5"
d <- fromJSON(api)
View(d)
api <- "https://somervillema.qscend.com/qalert/api/v1/requests/get/?createDateMin=07\/01\/2015\12:01\PM&key=5c2b987d13cc414cb26f956cf31fbffc8ca62dc37d1a4f6bba3cc74398162db5"
api <- "https://somervillema.qscend.com/qalert/api/v1/requests/get/?createDateMin=07/01/2015/12:01/PM&key=5c2b987d13cc414cb26f956cf31fbffc8ca62dc37d1a4f6bba3cc74398162db5"
d <- fromJSON(api)
View(d)
api <- "https://somervillema.qscend.com/qalert/api/v1/requests/get/?createDateMin=1441080000000&key=5c2b987d13cc414cb26f956cf31fbffc8ca62dc37d1a4f6bba3cc74398162db5"
d <- fromJSON(api)
api <- "https://somervillema.qscend.com/qalert/api/v1/requests/get/?createDateMax=1441080000000&key=5c2b987d13cc414cb26f956cf31fbffc8ca62dc37d1a4f6bba3cc74398162db5"
d <- fromJSON(api)
api <- "https://somervillema.qscend.com/qalert/api/v1/requests/get/?createDateMin=7%2F1%2F2015&key=5c2b987d13cc414cb26f956cf31fbffc8ca62dc37d1a4f6bba3cc74398162db5"
#### Created 10/14 by Daniel Hadley to load and analyze 311 Data ####
# The FTP site was created by Ahmod at Intelligov
# working Directory and packages #
setwd("c:/Users/dhadley/Documents/GitHub/2015_Constituent_Services")
library(RCurl)
library(dplyr)
library(ggplot2)
library(scales) # for changing from scientific notation
library(tidyr)
library(jsonlite)
# QSend API
api <- "https://somervillema.qscend.com/qalert/api/v1/requests/get/?createDateMin=7%2F1%2F2015&key=5c2b987d13cc414cb26f956cf31fbffc8ca62dc37d1a4f6bba3cc74398162db5"
d <- fromJSON(api)
View(d)
api <- "https://somervillema.qscend.com/qalert/api/v1/requests/dump/?createDateMin=7%2F1%2F2015&key=5c2b987d13cc414cb26f956cf31fbffc8ca62dc37d1a4f6bba3cc74398162db5"
d <- fromJSON(api)
d$request
d$request[1]
d$request[3]
test <- d$request
d$submitter
api <- "https://somervillema.qscend.com/qalert/api/v1/requests/dump/?start=7%2F1%2F2015&key=5c2b987d13cc414cb26f956cf31fbffc8ca62dc37d1a4f6bba3cc74398162db5"
d <- fromJSON(api)
test <- d$request
View(test)
api <- "https://somervillema.qscend.com/qalert/api/v1/requests/dump/?start=7%2F1%2F2015&key=5c2b987d13cc414cb26f956cf31fbffc8ca62dc37d1a4f6bba3cc74398162db5"
d <- fromJSON(api)
d
requests <- d$request
activities <- d$activity
attachment <- d$attachment
submitter <- d$submitter
deleted <- d$deleted
reqcustom <- d$reqcustom
View(attachment)
View(deleted)
View(reqcustom)
View(activities)
View(requests)
View(submitter)
View(test)
rm(test)
View(activities)
View(reqcustom)
View(submitter)
View(requests)
View(activities)
names(d)
QalertItems <- c("request", "activity", "attachment", "submitter", "deleted", "reqcustom")
QalertItems[2]
for(i in 1 : length(QalertItems)){
i <- d$[i]
}
for(i in 1 : length(QalertItems)){
write.csv(i, paste("./data/2015_08_20_Qalert_Data_Dump/", i,".csv"))
}
for(i in 1 : length(QalertItems)){
write.csv(QalertItems[i], paste("./data/2015_08_20_Qalert_Data_Dump/", QalertItems[i],".csv"))
}
for(i in 1 : length(QalertItems)){
write.csv(QalertItems[i], paste("./data/2015_08_20_Qalert_Data_Dump/", QalertItems[i], ".csv", sep = ""))
}
lapply(QalertItems, function(df) {
write.csv(df, paste("./data/2015_08_20_Qalert_Data_Dump/", df, ".csv", sep = ""))
})
request <- d$request
activity <- d$activity
attachment <- d$attachment
submitter <- d$submitter
deleted <- d$deleted
reqcustom <- d$reqcustom
lapply(QalertItems, function(df) {
df <- d$df
write.csv(df, paste("./data/2015_08_20_Qalert_Data_Dump/", df, ".csv", sep = ""))
})
request <- d$request
activity <- d$activity
attachment <- d$attachment
submitter <- d$submitter
deleted <- d$deleted
reqcustom <- d$reqcustom
write.csv(request, "./data/2015_08_20_Qalert_Data_Dump/request.csv")
write.csv(activity, "./data/2015_08_20_Qalert_Data_Dump/activity.csv")
write.csv(attachment, "./data/2015_08_20_Qalert_Data_Dump/attachment.csv")
write.csv(submitter, "./data/2015_08_20_Qalert_Data_Dump/submitter.csv")
write.csv(deleted, "./data/2015_08_20_Qalert_Data_Dump/deleted.csv")
write.csv(reqcustom, "./data/2015_08_20_Qalert_Data_Dump/reqcustom.csv")
write.csv(request, "./data/2015_08_20_Qalert_Data_Dump/request.csv", row.names = FALSE)
write.csv(activity, "./data/2015_08_20_Qalert_Data_Dump/activity.csv", row.names = FALSE)
write.csv(attachment, "./data/2015_08_20_Qalert_Data_Dump/attachment.csv", row.names = FALSE)
write.csv(submitter, "./data/2015_08_20_Qalert_Data_Dump/submitter.csv", row.names = FALSE)
write.csv(deleted, "./data/2015_08_20_Qalert_Data_Dump/deleted.csv", row.names = FALSE)
write.csv(reqcustom, "./data/2015_08_20_Qalert_Data_Dump/reqcustom.csv", row.names = FALSE)
write.csv(request, "./data/2015_08_20_Qalert_Data_Dump/request.csv", row.names = FALSE)
write.csv(activity, "./data/2015_08_20_Qalert_Data_Dump/activity.csv", row.names = FALSE)
write.csv(attachment, "./data/2015_08_20_Qalert_Data_Dump/attachment.csv", row.names = FALSE)
write.csv(submitter, "./data/2015_08_20_Qalert_Data_Dump/submitter.csv", row.names = FALSE)
write.csv(deleted, "./data/2015_08_20_Qalert_Data_Dump/deleted.csv", row.names = FALSE)
write.csv(reqcustom, "./data/2015_08_20_Qalert_Data_Dump/reqcustom.csv", row.names = FALSE)
request <- d$request
activity <- d$activity
attachment <- d$attachment
submitter <- d$submitter
deleted <- d$deleted
reqcustom <- d$reqcustom
write.csv(request, "./data/2015_08_20_Qalert_Data_Dump/request.csv", row.names = FALSE)
write.csv(activity, "./data/2015_08_20_Qalert_Data_Dump/activity.csv", row.names = FALSE)
write.csv(attachment, "./data/2015_08_20_Qalert_Data_Dump/attachment.csv", row.names = FALSE)
write.csv(submitter, "./data/2015_08_20_Qalert_Data_Dump/submitter.csv", row.names = FALSE)
write.csv(deleted, "./data/2015_08_20_Qalert_Data_Dump/deleted.csv", row.names = FALSE)
write.csv(reqcustom, "./data/2015_08_20_Qalert_Data_Dump/reqcustom.csv", row.names = FALSE)
write.csv(activity, "./data/2015_08_20_Qalert_Data_Dump/activity.csv", row.names = FALSE)
setwd("//fileshare1/Departments2/Somerstat Data/Constituent_Services")
write.csv(request, "./data/2015_08_20_Qalert_Data_Dump/request.csv", row.names = FALSE)
write.csv(activity, "./data/2015_08_20_Qalert_Data_Dump/activity.csv", row.names = FALSE)
write.csv(attachment, "./data/2015_08_20_Qalert_Data_Dump/attachment.csv", row.names = FALSE)
write.csv(submitter, "./data/2015_08_20_Qalert_Data_Dump/submitter.csv", row.names = FALSE)
write.csv(deleted, "./data/2015_08_20_Qalert_Data_Dump/deleted.csv", row.names = FALSE)
write.csv(reqcustom, "./data/2015_08_20_Qalert_Data_Dump/reqcustom.csv", row.names = FALSE)
write.csv(reqcustom, "./data/2015_08_20_Qalert_Data_Dump/reqcustom.csv", row.names = FALSE)
setwd("c:/Users/dhadley/Documents/GitHub/2015_Constituent_Services")
write.csv(reqcustom, "./data/2015_08_20_Qalert_Data_Dump/reqcustom.csv", row.names = FALSE)
#### Created 10/14 by Daniel Hadley to load and analyze 311 Data ####
# Updated 8/15 for Qsend
# working Directory and packages #
setwd("c:/Users/dhadley/Documents/GitHub/2015_Constituent_Services")
library(RCurl)
library(dplyr)
library(ggplot2)
library(scales) # for changing from scientific notation
library(tidyr)
library(jsonlite)
library(lubridate)
#### Load Data & Update via QSend API ####
# I leave out reqcustom, attachment, and deleted
activity <- read.csv("./data/activity.csv")
submitter <- read.csv("./data/submitter.csv")
request <- read.csv("./data/request.csv")
# Changes since x
# I do five days ago in case there is a problem for one or two days with the system
since <- Sys.Date() - 5
api <- paste("https://somervillema.qscend.com/qalert/api/v1/requests/changes/?since=", month(since), "%2F", day(since), "%2F", year(since), "&key=5c2b987d13cc414cb26f956cf31fbffc8ca62dc37d1a4f6bba3cc74398162db5", sep = "")
d <- fromJSON(api)
activityChanges <- d$activity
submitterChanges <- d$submitter
requestChanges <- d$request
activityUpdated <- rbind(activity, activityChanges)
activityUpdated <- distinct(activityUpdated)
remove(activity, activityChanges, request, requestChanges, submitter, submitterChanges)
#### Created 10/14 by Daniel Hadley to load and analyze 311 Data ####
# Updated 8/15 for Qsend
# working Directory and packages #
setwd("c:/Users/dhadley/Documents/GitHub/2015_Constituent_Services")
library(RCurl)
library(dplyr)
library(ggplot2)
library(scales) # for changing from scientific notation
library(tidyr)
library(jsonlite)
library(lubridate)
#### Load Data & Update via QSend API ####
# I leave out reqcustom, attachment, and deleted
activity <- read.csv("./data/activity.csv")
submitter <- read.csv("./data/submitter.csv")
request <- read.csv("./data/request.csv")
# Changes since x
# I do five days ago in case there is a problem for one or two days with the system
since <- Sys.Date() - 5
api <- paste("https://somervillema.qscend.com/qalert/api/v1/requests/changes/?since=", month(since), "%2F", day(since), "%2F", year(since), "&key=5c2b987d13cc414cb26f956cf31fbffc8ca62dc37d1a4f6bba3cc74398162db5", sep = "")
d <- fromJSON(api)
activityChanges <- d$activity
submitterChanges <- d$submitter
requestChanges <- d$request
# Now merge the dataframes
# Merge and get rid of dupes for activity
activityUpdated <- rbind(activity, activityChanges)
activityUpdated <- distinct(activityUpdated)
# Overwrite for request & submitter
# A clever method:
# http://stackoverflow.com/questions/28282484/join-two-dataframes-and-overwrite-matching-rows-r
requestUpdated <- rbind(requestChanges, request[!request$id %in% requestChanges$id,])
submitterUpdated <- rbind(submitterChanges, submitter[!submitter$id %in% submitterChanges$id,])
#### Write it ####
# Write it to the P: drive and my local
write.csv(requestUpdated, "//fileshare1/Departments2/Somerstat Data/Constituent_Services/data/request.csv", row.names = FALSE)
write.csv(requestUpdated, "./data/request.csv", row.names = FALSE)
write.csv(activityUpdated, "//fileshare1/Departments2/Somerstat Data/Constituent_Services/data/activity.csv", row.names = FALSE)
write.csv(activityUpdated, "./data/activity.csv", row.names = FALSE)
write.csv(submitterUpdated, "//fileshare1/Departments2/Somerstat Data/Constituent_Services/data/submitter.csv", row.names = FALSE)
write.csv(submitterUpdated, "./data/submitter.csv", row.names = FALSE)
remove(activity, activityChanges, request, requestChanges, submitter, submitterChanges)
####  Visualize ####
lime_green = "#2ecc71"
soft_blue = "#3498db"
pinkish_red = "#e74c3c"
purple = "#9b59b6"
teele = "#1abc9c"
nice_blue = "#2980b9"
my.theme <-
theme(#plot.background = element_rect(fill="white"), # Remove background
panel.grid.major = element_blank(), # Remove gridlines
# panel.grid.minor = element_blank(), # Remove more gridlines
# panel.border = element_blank(), # Remove border
# panel.background = element_blank(), # Remove more background
axis.ticks = element_blank(), # Remove axis ticks
axis.text=element_text(size=6), # Enlarge axis text font
axis.title=element_text(size=8), # Enlarge axis title font
plot.title=element_text(size=12) # Enlarge, left-align title
,axis.text.x = element_text(angle=60, hjust = 1) # Uncomment if X-axis unreadable
)
# dates
today <- Sys.Date()
yesterday <- today - 1
d$Date <- as.Date(d$Date, "%m/%d/%Y")
d$Year.Month <- format(d$Date, '%Y-%m')
d$Month <- format(d$Date, '%m')
d$Year <- format(d$Date, '%Y')
d$DaysAgo <- difftime(d$Date, today, units = "days")
requestUpdated$addDate
View(activityUpdated)
requestUpdated$displayDate
requestUpdated$Date <- as.Date(requestUpdated$displayDate, "%m/%d/%Y")
requestUpdated$Date
today <- Sys.Date()
yesterday <- today - 1
requestUpdated$Date <- as.Date(requestUpdated$displayDate, "%m/%d/%Y")
requestUpdated$Year.Month <- format(requestUpdated$Date, '%Y-%m')
requestUpdated$Month <- format(requestUpdated$Date, '%m')
requestUpdated$Year <- format(requestUpdated$Date, '%Y')
requestUpdated$DaysAgo <- difftime(requestUpdated$Date, today, units = "days")
LastTwentyFour <- requestUpdated %>%
filter(DaysAgo > -2) %>%
group_by(Service.Type) %>%
summarize(count=n()) %>%
filter(count > 5)
View(activityUpdated)
View(activityUpdated)
View(requestUpdated)
names(requestUpdated)
LastTwentyFour <- requestUpdated %>%
filter(DaysAgo > -2) %>%
group_by(typeName) %>%
summarize(count=n()) %>%
filter(count > 5)
ggplot(LastTwentyFour, aes(x=reorder(Service.Type, count)  , y=count)) +
geom_bar(stat = "identity", colour="white", fill=nice_blue) +
my.theme + ggtitle(paste("Top Work Orders From Yesterday:", yesterday)) + xlab("Request") +
ylab("# of Requests") +
scale_y_continuous(labels = comma)
ggplot(LastTwentyFour, aes(x=reorder(typeName, count)  , y=count)) +
geom_bar(stat = "identity", colour="white", fill=nice_blue) +
my.theme + ggtitle(paste("Top Work Orders From Yesterday:", yesterday)) + xlab("Request") +
ylab("# of Requests") +
scale_y_continuous(labels = comma)
View(LastTwentyFour)
View(requestUpdated)
LastTwentyFour <- requestUpdated %>%
filter(DaysAgo > -2)
View(LastTwentyFour)
LastTwentyFour <- requestUpdated %>%
filter(DaysAgo > -1) %>%
group_by(typeName) %>%
summarize(count=n()) %>%
filter(count > 5)
ggplot(LastTwentyFour, aes(x=reorder(typeName, count)  , y=count)) +
geom_bar(stat = "identity", colour="white", fill=nice_blue) +
my.theme + ggtitle(paste("Top Work Orders From Yesterday:", yesterday)) + xlab("Request") +
ylab("# of Requests") +
scale_y_continuous(labels = comma)
View(LastTwentyFour)
# ggsave(paste("./plots/daily/", yesterday, "_LastTwentyFour.png", sep=""), dpi=300, width=5, height=5)
ggsave("./plots/daily/LastTwentyFour.png", dpi=300, width=5, height=5)
ggsave("//fileshare1/Departments2/Somerstat Data/Constituent_Services/plots/LastTwentyFour.png", dpi=300, width=5, height=5)
#### Created 10/14 by Daniel Hadley to load and analyze 311 Data ####
# Updated 8/15 for Qsend
# working Directory and packages #
setwd("c:/Users/dhadley/Documents/GitHub/2015_Constituent_Services")
library(RCurl)
library(dplyr)
library(ggplot2)
library(scales) # for changing from scientific notation
library(tidyr)
library(jsonlite)
library(lubridate)
#### Load Data & Update via QSend API ####
# I leave out reqcustom, attachment, and deleted
activity <- read.csv("./data/activity.csv")
submitter <- read.csv("./data/submitter.csv")
request <- read.csv("./data/request.csv")
# Changes since x
# I do five days ago in case there is a problem for one or two days with the system
since <- Sys.Date() - 15
api <- paste("https://somervillema.qscend.com/qalert/api/v1/requests/changes/?since=", month(since), "%2F", day(since), "%2F", year(since), "&key=5c2b987d13cc414cb26f956cf31fbffc8ca62dc37d1a4f6bba3cc74398162db5", sep = "")
d <- fromJSON(api)
activityChanges <- d$activity
submitterChanges <- d$submitter
requestChanges <- d$request
activityUpdated <- rbind(activity, activityChanges)
activityUpdated <- distinct(activityUpdated)
# Overwrite for request & submitter
# A clever method:
# http://stackoverflow.com/questions/28282484/join-two-dataframes-and-overwrite-matching-rows-r
requestUpdated <- rbind(requestChanges, request[!request$id %in% requestChanges$id,])
submitterUpdated <- rbind(submitterChanges, submitter[!submitter$id %in% submitterChanges$id,])
#### Write it ####
# Write it to the P: drive and my local
write.csv(requestUpdated, "//fileshare1/Departments2/Somerstat Data/Constituent_Services/data/request.csv", row.names = FALSE)
write.csv(requestUpdated, "./data/request.csv", row.names = FALSE)
write.csv(activityUpdated, "//fileshare1/Departments2/Somerstat Data/Constituent_Services/data/activity.csv", row.names = FALSE)
write.csv(activityUpdated, "./data/activity.csv", row.names = FALSE)
write.csv(submitterUpdated, "//fileshare1/Departments2/Somerstat Data/Constituent_Services/data/submitter.csv", row.names = FALSE)
write.csv(submitterUpdated, "./data/submitter.csv", row.names = FALSE)
remove(activity, activityChanges, request, requestChanges, submitter, submitterChanges, d)
####  Visualize ####
lime_green = "#2ecc71"
soft_blue = "#3498db"
pinkish_red = "#e74c3c"
purple = "#9b59b6"
teele = "#1abc9c"
nice_blue = "#2980b9"
my.theme <-
theme(#plot.background = element_rect(fill="white"), # Remove background
panel.grid.major = element_blank(), # Remove gridlines
# panel.grid.minor = element_blank(), # Remove more gridlines
# panel.border = element_blank(), # Remove border
# panel.background = element_blank(), # Remove more background
axis.ticks = element_blank(), # Remove axis ticks
axis.text=element_text(size=6), # Enlarge axis text font
axis.title=element_text(size=8), # Enlarge axis title font
plot.title=element_text(size=12) # Enlarge, left-align title
,axis.text.x = element_text(angle=60, hjust = 1) # Uncomment if X-axis unreadable
)
# dates
today <- Sys.Date()
yesterday <- today - 1
requestUpdated$Date <- as.Date(requestUpdated$displayDate, "%m/%d/%Y")
requestUpdated$Year.Month <- format(requestUpdated$Date, '%Y-%m')
requestUpdated$Month <- format(requestUpdated$Date, '%m')
requestUpdated$Year <- format(requestUpdated$Date, '%Y')
requestUpdated$DaysAgo <- difftime(requestUpdated$Date, today, units = "days")
#### Top from last day ####
LastTwentyFour <- requestUpdated %>%
filter(DaysAgo > -1) %>%
group_by(typeName) %>%
summarize(count=n()) %>%
filter(count > 5)
ggplot(LastTwentyFour, aes(x=reorder(typeName, count)  , y=count)) +
geom_bar(stat = "identity", colour="white", fill=nice_blue) +
my.theme + ggtitle(paste("Top Work Orders From Yesterday:", yesterday)) + xlab("Request") +
ylab("# of Requests") +
scale_y_continuous(labels = comma)
# ggsave(paste("./plots/daily/", yesterday, "_LastTwentyFour.png", sep=""), dpi=300, width=5, height=5)
ggsave("./plots/daily/LastTwentyFour.png", dpi=300, width=5, height=5)
ggsave("//fileshare1/Departments2/Somerstat Data/Constituent_Services/plots/LastTwentyFour.png", dpi=300, width=5, height=5)
#### Created 10/14 by Daniel Hadley to load and analyze 311 Data ####
# Updated 8/15 for Qsend
# working Directory and packages #
setwd("c:/Users/dhadley/Documents/GitHub/2015_Constituent_Services")
library(RCurl)
library(dplyr)
library(ggplot2)
library(scales) # for changing from scientific notation
library(tidyr)
library(jsonlite)
library(lubridate)
#### Load Data & Update via QSend API ####
# I leave out reqcustom, attachment, and deleted
activity <- read.csv("./data/activity.csv")
submitter <- read.csv("./data/submitter.csv")
request <- read.csv("./data/request.csv")
View(request)
# Changes since x
# I do five days ago in case there is a problem for one or two days with the system
since <- Sys.Date() - 15
api <- paste("https://somervillema.qscend.com/qalert/api/v1/requests/changes/?since=", month(since), "%2F", day(since), "%2F", year(since), "&key=5c2b987d13cc414cb26f956cf31fbffc8ca62dc37d1a4f6bba3cc74398162db5", sep = "")
d <- fromJSON(api)
activityChanges <- d$activity
submitterChanges <- d$submitter
requestChanges <- d$request
View(request)
View(requestChanges)
# Now merge the dataframes
# Merge and get rid of dupes for activity
activityUpdated <- rbind(activity, activityChanges)
activityUpdated <- distinct(activityUpdated)
# Overwrite for request & submitter
# A clever method:
# http://stackoverflow.com/questions/28282484/join-two-dataframes-and-overwrite-matching-rows-r
requestUpdated <- rbind(requestChanges, request[!request$id %in% requestChanges$id,])
submitterUpdated <- rbind(submitterChanges, submitter[!submitter$id %in% submitterChanges$id,])
# Remove everything else
remove(activity, activityChanges, request, requestChanges, submitter, submitterChanges, d)
####  Visualize ####
lime_green = "#2ecc71"
soft_blue = "#3498db"
pinkish_red = "#e74c3c"
purple = "#9b59b6"
teele = "#1abc9c"
nice_blue = "#2980b9"
my.theme <-
theme(#plot.background = element_rect(fill="white"), # Remove background
panel.grid.major = element_blank(), # Remove gridlines
# panel.grid.minor = element_blank(), # Remove more gridlines
# panel.border = element_blank(), # Remove border
# panel.background = element_blank(), # Remove more background
axis.ticks = element_blank(), # Remove axis ticks
axis.text=element_text(size=6), # Enlarge axis text font
axis.title=element_text(size=8), # Enlarge axis title font
plot.title=element_text(size=12) # Enlarge, left-align title
,axis.text.x = element_text(angle=60, hjust = 1) # Uncomment if X-axis unreadable
)
# dates
today <- Sys.Date()
yesterday <- today - 1
requestUpdated$Date <- as.Date(requestUpdated$displayDate, "%m/%d/%Y")
requestUpdated$Year.Month <- format(requestUpdated$Date, '%Y-%m')
requestUpdated$Month <- format(requestUpdated$Date, '%m')
requestUpdated$Year <- format(requestUpdated$Date, '%Y')
requestUpdated$DaysAgo <- difftime(requestUpdated$Date, today, units = "days")
#### Top from last day ####
LastTwentyFour <- requestUpdated %>%
filter(DaysAgo > -1) %>%
group_by(typeName) %>%
summarize(count=n()) %>%
filter(count > 5)
ggplot(LastTwentyFour, aes(x=reorder(typeName, count)  , y=count)) +
geom_bar(stat = "identity", colour="white", fill=nice_blue) +
my.theme + ggtitle(paste("Top Work Orders From Yesterday:", yesterday)) + xlab("Request") +
ylab("# of Requests") +
scale_y_continuous(labels = comma)
ggsave("./plots/daily/LastTwentyFour.png", dpi=300, width=5, height=5)
ggsave("./plots/daily/LastTwentyFour.png", dpi=300, width=5, height=5)
ggsave("//fileshare1/Departments2/Somerstat Data/Constituent_Services/plots/LastTwentyFour.png", dpi=300, width=5, height=5)
